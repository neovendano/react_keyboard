{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","length","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,WAAWU,OAAtB,mCAC+BH,KAAKR,MAAMC,WAD1C,KAEG,kCAvBd,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.8a41cbca.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  pressedKey: string,\n}\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePressedKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlePressedKey);\n  }\n\n  handlePressedKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey.length\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}